name: Build Kivy Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest   # GitHub Hosted Runner x86_64

    steps:
    # 1️⃣ Repository auschecken
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2️⃣ Python 3.11 einrichten
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # 3️⃣ Systemabhängigkeiten installieren
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y unzip wget openjdk-11-jdk python3-pip git build-essential

    # 4️⃣ Buildozer installieren
    - name: Install Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install cython buildozer

    # 5️⃣ Android SDK + Build-Tools installieren
    - name: Install Android SDK & Build-Tools
      run: |
        export ANDROID_HOME=$HOME/Android
        mkdir -p $ANDROID_HOME/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
        yes | $ANDROID_HOME/cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

    # 6️⃣ Umgebungsvariablen für Buildozer setzen
    - name: Set environment variables for Buildozer
      run: |
        echo "export ANDROIDSDK=$HOME/Android" >> $GITHUB_ENV
        echo "export ANDROIDNDK=$HOME/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV
        echo "export PATH=$HOME/Android/cmdline-tools/cmdline-tools/bin:$HOME/Android/platform-tools:$PATH" >> $GITHUB_ENV

    # 7️⃣ APK bauen
    - name: Build APK
      run: |
        buildozer android debug

    # 8️⃣ Fertige APK hochladen
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: trinkspiel-apk
        path: bin/*.apk
